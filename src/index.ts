/** Import des librairies */
import { ApolloServer } from "@apollo/server";
import { startStandaloneServer } from "@apollo/server/standalone";

/** DÃ©finition des types de donnÃ©es */
// un schÃ©ma est une collection de dÃ©finitions de type (d'oÃ¹ "typeDefs")
const typeDefs = `#graphql
  # This "Cartoon" type defines the queryable fields for every cartoon in our data source.
  type Cartoon {
    id: ID
    name: String
    description: String
  }

  # The "Query" type is special: it lists all of the available queries
  type Query {
    getCartoons: [Cartoon]
  }
`;

/** CrÃ©ation des rÃ©solvers */
// Les rÃ©solvers sont des fonctions qui permettent de rÃ©cupÃ©rer les donnÃ©es
// Ce rÃ©solveur rÃ©cupÃ¨re les livres du tableau Â« cartoons Â» ci-dessus.
const resolvers = {
  Query: {
    getCartoons: () => cartoons,
  },
};

/** CrÃ©ation du serveur */
const server = new ApolloServer({
  typeDefs,
  resolvers,
});

/** Fonction auto appellÃ©e (Ã©vite la mise en constante) permettant de lancer le serveur */
(async () => {
  const { url } = await startStandaloneServer(server, {
    listen: { port: 4000 },
  });

  console.log(`ğŸš€  Server ready at: ${url}`);
})();
